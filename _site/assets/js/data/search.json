[
  
  {
    "title": "테스트 코드 개선에 대한 고찰",
    "url": "/posts/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C-%EA%B0%9C%EC%84%A0%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B3%A0%EC%B0%B0/",
    "categories": "develop, rubyonrails",
    "tags": "test code, travis",
    "date": "2024-12-01 17:19:00 +0900",
    





    
    "snippet": "현재 상황  travis build 가 너무 오래 걸린다.          PR 을 올리면 CI 툴인 travis 를 통해 travis build 가 실행      .travis.yml 에 정의한 configuration 대로 build 가 실행되며 PR 에 해당하는 테스트 코드가 실행      개발자들이 올린 PR 마다 실행되는 build 는 tra...",
    "content": "현재 상황  travis build 가 너무 오래 걸린다.          PR 을 올리면 CI 툴인 travis 를 통해 travis build 가 실행      .travis.yml 에 정의한 configuration 대로 build 가 실행되며 PR 에 해당하는 테스트 코드가 실행      개발자들이 올린 PR 마다 실행되는 build 는 travis queue 에서 처리가 되며 동시에 n개까지 처리가 가능      주된 업무 시간에는 queue 에 build 들이 쌓이며, 늦으면 몇 시간까지도 build 완료가 밀리는 일이 발생        build 가 실행될 때, 보통 다른 업무를 하지만 때로는 build 가 빨리 실행돼야 하는 순간들이 있음 (예: 핫픽스 준비)  build 실행 시간, 상세히는 build 에서의 테스트 코드 실행 시간을 단축하여 업무 효율을 높이고자 함Chained PRPR 에서 이미 travis build 중인 commit 이 amend 되더라도, 기존에 실행되던 build 는 취소되지 않음  travis-ci 설정의 Auto Cancellation 설정에 대한 설명          Builds will only be canceled if they are waiting to run, allowing for any running jobs to finish.        https://app.travis-ci.com/github/crema/crema/pull_requests 에서 현재 build running 중인 PR 정보 확인 가능  참고: travis build 중인 PR 이 닫힐 때, 일정 시간 후 build 취소됨위 문제에 대한 해결은, commit amend -&gt; force push 를 남발하여 build queue 를 가득 채워버리는 행위를 지양하는 것이다. 우리 회사는 1PR - 1commit 의 방법을 택하기 때문에, chain PR 을 만드는 일이 흔하다. chain PR 에서 비교적 앞쪽 PR 에 대한 리뷰 수정요청을 반영하면, 뒤에 연결된 PR 들은 전부 rebase branch 되어 새로운 빌드가 실행된다. 이 때, build queue 는 한 명의 작업에 의해 독점된다. 로컬 환경에서 lint(rubocop) 체크를 빼먹거나, 테스트 코드에 의한 검증을 빼먹고 PR 을 올린다면 이런 문제가 더 심화되게 된다.사실, 이 문제는 개발하다보면 놓치기 쉬운 부분이고 체크하기 귀찮은 부분이라고 생각한다. 본질적인 해결보다는 증상 완화를 위한 방안 정도가 아닐까 싶다.Monolithic Architecture우리 회사는 여러 프로젝트가 하나의 repository 내에서 관리되는 monolith 구조를 택하고 있다. 프로젝트 공통으로 활용되는 로직 등은 core 경로에서 관리되는데, core 에 위치한 파일에 수정이 있을 경우, 그 core 파일을 활용하는 모든 프로젝트에 대한 테스트가 수행된다. 주요 로직은 Rails 에서 관리되기 때문에, core 파일이 수정되면 Rails 프로젝트들은 전부 테스트가 전부 실행된다.class TravisRunner  def changes_detected_in_core?(project)    return false unless CORE_PROJECTS.include?(project)    return true if git_diffs.any? {|path| path.start_with?('core')}    false  endend테스트 코드의 범위 혹은 수준에는 ‘유닛 테스트’와 ‘통합 테스트’가 있다. 정의를 보면 아래와 같다.유닛 테스트(Unit Test):  동작 범위: 가장 작은 단위의 코드인 개별 함수나 메서드, 클래스를 테스트합니다.목적: 각각의 모듈이 독립적으로 정확하게 동작하는지 확인합니다.특징: 외부 의존성을 최대한 제거하여 빠르고 간결하게 실행됩니다.통합 테스트(Integration Test):  동작 범위: 여러 모듈이 함께 동작하는지 확인하기 위해 두 개 이상의 유닛을 조합하여 테스트합니다.목적: 모듈 간의 상호작용이나 데이터 흐름이 예상대로 이루어지는지 점검합니다.특징: 의존성을 포함하기 때문에 유닛 테스트보다는 복잡하고 시간이 더 걸릴 수 있습니다.현재, 우리 회사의 테스트 코드에는 유닛 테스트, 통합 테스트가 명확하게 구분돼있지 않은 것들이 많은데 그 것들을 구분지으면 core 코드에 수정이 있을 때마다 모든 테스트 코드를 실행하는 것을 막을 수 있을 것 같다.내가 생각하는 이상적인 구조는 아래와 같다. core 코드(A), 그 파일을 사용하는 코드(B)가 있다고 가정하자.  A, B 는 각각의 유닛 테스트 코드를 가진다.          외부 의존성을 가능한 제거하여 외부 코드의 수정에 테스트 실행 결과가 영향 받지 않도록 작성한다.      stub, mock 을 적극 활용하면 의존성 제거하기 쉽다.        A 의 수정이 B 에 영향을 주는 의존성이 있다면, 통합 테스트를 별도의 경로에 작성한다.          A 에서 수정 생긴 경우, 그에 해당하는 A의 유닛 테스트를 실행한다.      A 의 수정에 영향을 받는 B, C, D 등에 연관된 통합 테스트들을 실행할 수 있도록 한다.      A 의 수정과 무관한 통합 테스트들은 실행될 필요가 없기에 제외할 수 있도록 한다.                  파일 경로나 이름 등으로 제어할 수 있을듯                    결론아직 이론적으로만 생각해본 것이라, 실제 적용에서 어떤 어려움이 있을지는 모르겠다. 피드백을 받아볼 필요가 있다."
  },
  
  {
    "title": "AI 의 신박한 활용 사례",
    "url": "/posts/AI-%EC%9D%98-%EC%8B%A0%EB%B0%95%ED%95%9C-%ED%99%9C%EC%9A%A9-%EC%82%AC%EB%A1%80/",
    "categories": "notes, gibberish",
    "tags": "llm, chatgpt, chatbot",
    "date": "2024-11-17 13:14:00 +0900",
    





    
    "snippet": "https://techcrunch.com/2024/11/15/ai-granny-scambaiter-wastes-telephone-fraudsters-time-with-boring-chat/최근 TechCrunch 를 보다가 흥미로운 글을 읽어서 공유한다. 보이스피싱과 같이 전화로 사기를 치는 것은 비단 대한민국뿐만 아니라 전세계적으로 인기가 식지 않는...",
    "content": "https://techcrunch.com/2024/11/15/ai-granny-scambaiter-wastes-telephone-fraudsters-time-with-boring-chat/최근 TechCrunch 를 보다가 흥미로운 글을 읽어서 공유한다. 보이스피싱과 같이 전화로 사기를 치는 것은 비단 대한민국뿐만 아니라 전세계적으로 인기가 식지 않는 사기 수법인 것 같다. 이에 대한 대항마로 O2 라는 회사에서 AI Granny ‘Daisy’ 를 만들었다. 전화 사기에 대해 후후콜과 같이 수신 차단을 하는 서비스들은 봤는데, 이 AI Granny 는 기존과 전혀 다른 접근을 한다. 아래 유튜브 소개 영상을 첨부한다.간단히 요약하면, ‘Daisy’ 를 가지고 전화 사기꾼들을 잡아둬서 그들의 소중한(?) 시간을 뺏는 전략인데, 참 신선한 접근이다. 무의미하거나 반복된 대화를 몇 시간이고 지속해도 AI 는 지치지 않는다. 영상 말미에 보면 이 할머니 AI 들이 scalable 하게 군단이 되어 사기꾼들을 상대할 준비를 하고 있는데, 이 전투 결과가 기대된다.위 글을 보고 나서 얼마 후, 대용님이 마침 인스타에 공유해주신 이미지도 비슷한 맥락이라 가져와봤다.https://www.threads.net/@aicoffeechat/post/DCay9aDv8e_전화 사기꾼을 상대하는 AI Granny 와 달리, ChatGPT 는 무한 질문봇 아이들을 상대할 수 있다.알파고가 이세돌을 이겼을 때, AI 가 곧 사람들의 대다수 직업을 대신하고 세상을 정복할 것이라는 우려가 있었다. 테크노포비아(Technophobia)를 가진 자들이 생각하지 못했던 순기능들이, AI 기술이 차차 발전해감에 따라 조금씩 발견되고 있는 것은 아닐까? 어떻게 쓰냐에 따라 인류에게 득이 될수도, 실이 될수도 있는 AI 기술의 발전을 흥미롭게 지켜보고 있는 요즘이다."
  },
  
  {
    "title": "PyCall 로 Ruby 환경에서 Python 라이브러리 사용",
    "url": "/posts/PyCall-%EB%A1%9C-Ruby-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-Python-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/",
    "categories": "develop, products",
    "tags": "ruby, python, nlp",
    "date": "2024-11-10 16:04:00 +0900",
    





    
    "snippet": "PyCall 이란?회사에서는 거의 대부분 Ruby On Rails(이하 ROR, 레일즈) 기반 프로젝트를 다루다보니, 사용 가능한 라이브러리가 레일즈 gem 에 한정되는데 PyCall 을 사용하면 Ruby(이하 루비) 코드에서 Python 라이브러리를 사용할 수 있다. Pycall 라이브러리의 설명은 아래와 같다. 간단히 파이썬 코드의 ruby wra...",
    "content": "PyCall 이란?회사에서는 거의 대부분 Ruby On Rails(이하 ROR, 레일즈) 기반 프로젝트를 다루다보니, 사용 가능한 라이브러리가 레일즈 gem 에 한정되는데 PyCall 을 사용하면 Ruby(이하 루비) 코드에서 Python 라이브러리를 사용할 수 있다. Pycall 라이브러리의 설명은 아래와 같다. 간단히 파이썬 코드의 ruby wrapper 라고 보면 된다.  This library provides the features to directly call and partially interoperate with Python from the Ruby language. You can import arbitrary Python modules into Ruby modules, call Python functions with automatic type conversion from Ruby to Python.루비는 아무래도 파이썬에 비해 인기가 떨어지는 언어다보니 라이브러리 선택의 폭이 상대적으로 좁다. 파이썬 라이브러리와 동일(혹은, 유사)한 동작을 제공하는 루비 gem 들이 있지만, 성에 차지 않는 경우가 있다. 오래 전, 한글 형태소 분석 처리할 일이 있어서 KoNLPy를 사용했는데 그 때 PyCall 을 사용했다. konlpy 말고도 pytagcloud 사용해서 태그 클라우드 만들 때도 유용하게 썼다.사용 예시$ gem install --pre pycall$ pip install konlpypycall gem 과 konlpy 를 설치해주고, 루비 코드에서 아래와 같이 호출할 수 있다.PyCall.import_module('konlpy.tag').Mecab.new.pos \"한글 형태소 분석을 해봅시다.\"=&gt; [('한글', 'NNG'), ('형태소', 'NNG'), ('분석', 'NNG'), ('을', 'JKO'), ('해', 'VV+EC'), ('봅시다', 'VX+EF'), ('.', 'SF')]참고  https://github.com/mrkn/pycall.rb"
  },
  
  {
    "title": "RAG(검색 증강 생성)에 대한 짧은 정리",
    "url": "/posts/RAG(%EA%B2%80%EC%83%89-%EC%A6%9D%EA%B0%95-%EC%83%9D%EC%84%B1)%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A7%A7%EC%9D%80-%EC%A0%95%EB%A6%AC/",
    "categories": "develop, products",
    "tags": "llm, rag, chatgpt, langchain",
    "date": "2024-11-04 15:24:00 +0900",
    





    
    "snippet": "‘검색 증강 생성’ 이라 불리는 RAG(Retrieval Augmented Generation) 에 대해 최근 호기심이 생겨 찾아본 내용을 정리해본다. OpenAI 의 ChatGPT 를 필두로 많은 회사들이 LLM 을 상용화하며 AI 업계의 판도가 바뀌었고, 업계에서 AI 개발을 접근하는 방향도 많이 바뀌었다. 모델을 직접 학습, 개발하던 방식에서 L...",
    "content": "‘검색 증강 생성’ 이라 불리는 RAG(Retrieval Augmented Generation) 에 대해 최근 호기심이 생겨 찾아본 내용을 정리해본다. OpenAI 의 ChatGPT 를 필두로 많은 회사들이 LLM 을 상용화하며 AI 업계의 판도가 바뀌었고, 업계에서 AI 개발을 접근하는 방향도 많이 바뀌었다. 모델을 직접 학습, 개발하던 방식에서 LLM 을 최대한으로 활용하는 방식으로 말이다.LLM 의 한계를 넘어서ChatGPT 출시 당시 많은 사용자에게 신선한 충격을 주며 그 활용성이 무한해보였는데 이후로 많은 단점들이 드러났다. 단점들 중에서는 사실 관계의 오류나 사용자 질문의 맥락을 이해하는데 한계점을 보인다는 점이 있다. 이에 대한 개선으로 RAG 가 떠오르고 있다고 한다. ‘LLM 의 미래’ 라고 불리고 있는 RAG 는 외부 지식 베이스를 연결하여 언어 모델의 능력을 향상시키는 기술이다.RAG - https://www.trantorinc.com/blog/what-is-rag-retrieval-augmented-generationLLM 이 응답하기 이전 벡터 DB 에 저장된 데이터에서 관련 정보 추출하고, 이후 사용자의 쿼리와 벡터 DB 에서 Retrieve 한 데이터를 바탕으로 최종 답변 생성한다.RAG 활용한 개발현재 진행되는 개발은 LangChain 을 활용 중이다. 랭체인은 LLM 을 활용하여 애플리케이션을 개발 시에 사용하는 프레임워크이다. LangChain 의 Agent 가 LLM 과 다른 데이터 소스 등 두 가지 이상 조합을 가능하게 하는데, 여기서 활용할 데이터 소스가 위에 언급한 벡터 DB 가 될 것이다. 참고로, LangSmith 는 LangChain 으로 만든 애플리케이션의 성능을 모니터링, 최적화하는 도구로 유지보수에 사용된다.현재 팀에서 관심을 갖고 있는 것은 챗봇 개발인데, RAG 를 활용하기 가장 좋은 주제로 생각된다. 기존 LLM 에서 제공할 수 없었던 우리 회사 제품에 대한 정보를, 벡터 DB 에서 가져와 그 context 를 가지고 우리의 어플리케이션 사용자가 질의한 쿼리를 답변할 수 있을 것으로 기대한다.참고  https://www.trantorinc.com/blog/what-is-rag-retrieval-augmented-generation  https://www.ncloud-forums.com/topic/277"
  },
  
  {
    "title": "strace 명령어 활용하기",
    "url": "/posts/strace-%EB%AA%85%EB%A0%B9%EC%96%B4-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0/",
    "categories": "develop, debugging",
    "tags": "strace, devops",
    "date": "2024-10-27 16:21:00 +0900",
    





    
    "snippet": "strace 란?man strace bash 명령어를 실행해보면 정의 및 설명은 아래와 같다. 간단히, 시스템 콜(호출)을 추적하는 디버깅 툴이라고 보면 된다.  strace - trace system calls and signals      intercepts and records the system calls which are called by a...",
    "content": "strace 란?man strace bash 명령어를 실행해보면 정의 및 설명은 아래와 같다. 간단히, 시스템 콜(호출)을 추적하는 디버깅 툴이라고 보면 된다.  strace - trace system calls and signals      intercepts and records the system calls which are called by a process and the signals which are received by a process.    is a useful diagnostic, instructional, and debugging tool.  시스템 콜 추적간단한 예시로 ls 명령어 실행 시의 시스템 콜을 추적해본다. ls 는 파일 디렉토리를 리스팅하는 기본 명령어다. strace ls 실행해보면 100여 라인의 시스템 콜이 화면에 찍히는데 간단히 살펴보자.openat(AT_FDCWD, \"/proc/filesystems\", O_RDONLY|O_CLOEXEC) = 3fstat(3, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0read(3, \"nodev\\tsysfs\\nnodev\\trootfs\\nnodev\\tr\"..., 1024) = 464read(3, \"\", 1024)                       = 0close(3)                                = 0access(\"/etc/selinux/config\", F_OK)     = -1 ENOENT (No such file or directory)...각 라인의 맨 앞에 오는 단어들은 어떤 시스템 콜을 하는지를 나타낸다. 시스템 콜들의 설명과 간단한 동작 설명은 아래와 같다. 동작 설명은 ChatGPT 를 통해 검색했다. 이외에도 많은 시스템 콜들이 있는데 미리 알고 있을 필요는 없고 궁금할 때 하나씩 찾아보면 되겠다.openat  파일을 열거나 새로 생성하는 시스템 호출  open 과 달리 openat 은 특정 디렉토리(상대 경로)를 기준으로 파일을 열기 위한 함수  현재 작업 디렉토리(AT_FDCWD)를 기준으로, “/proc/filesystems” 을 읽기 전용(O_RDONLY)으로 연다.  O_CLOEXEC 은 파일 디스크립터가 새로운 프로그램이 실행될 때 자동으로 닫히도록 설정          파일 디스크립터가 예상치 않게 다른 프로그램에서 열려 있는 것을 방지하여 보안성을 향상      프로세스가 파일 디스크립터를 남겨두지 않으므로 리소스가 낭비되지 않도록 자원 관리        반환값: 파일 디스크립터(3)fstat  파일의 메타데이터를 가져오는 시스템 호출  프로그램이 파일을 읽거나 쓰기 전에 해당 파일 속성(크기, 타입 등)을 알기 위해 자주 호출된다.  st_mode 는 파일 유형과 권한을, st_size 는 파일 크기가 0바이트임을 나타낸다.read  파일 디스크립터가 가리키는 위치에서 지정된 크기만큼 데이터를 읽어 메모리 버퍼에 저장하는 시스템 호출  프로그램이 파일, 네트워크 소켓, 파이프 등에서 데이터를 읽을 때 사용된다.  파일을 연 후 데이터 읽기를 수행하거나, 네트워크에서 들어오는 메시지를 수신하는 작업에 유용  함수 인자: 파일 디스크립터, 읽은 데이터를 저장할 메모리 버퍼 주소, 읽을 데이터의 최대 바이트 수  반환 값: 실제로 읽은 바이트 수. 0 은 파일의 끝(EOF)을, -1 은 오류 발생을 의미access  특정 파일에 대해 프로세스가 읽기/쓰기/실행 등의 권한을 가지고 있는지 확인하는 시스템 호출  함수 인자: 접근을 확인할 파일 경로, 확인할 권한          권한: R_OK(읽기), W_OK(쓰기), X_OK(실행), 또는 F_OK(존재 여부)      프로세스 디버깅나는 strace 의 활용을 주로 디버깅 용도로 활용한다. 개발 업무 중 ruby 스크립트를 콘솔에서 실행할 일이 아주 많은데, ps 명령어를 통해 얻은 PID 를 가지고 프로세스에 strace 연결하여 실행한 코드가 어떤 상태인지 확인한다. 스크립트가 실행 중 멈춘 것 같거나 할 때 유용하다. 여러 개의 콘솔에서 다수의 스크립트를 실행했을 때, 스크립트의 동작을 tracing 해보고 프로세스를 구분하기도 한다.man(매뉴얼) 페이지에 아래와 같은 설명이 있다.  -p pid: Attach  to the process with the process ID pid and begin tracing.# strace 활용 예시# -s (strsize): Specify the maximum string size to print (the default is 32)# -t: Prefix each line of the trace with the wall clock time# -f: Trace  child processes as they are created by currently traced processessudo strace -s 16 -f -t -p &lt;pid&gt;참고  ChatGPT  https://access.redhat.com/ko/articles/3118571"
  },
  
  {
    "title": "캡챠 인증 chatGPT 로 통과하기",
    "url": "/posts/%EC%BA%A1%EC%B1%A0-%EC%9D%B8%EC%A6%9D-chatGPT-%EB%A1%9C-%ED%86%B5%EA%B3%BC%ED%95%98%EA%B8%B0/",
    "categories": "develop, private",
    "tags": "captcha, ocr, chatgpt",
    "date": "2024-10-22 22:57:00 +0900",
    





    
    "snippet": "최근 취미로 시작한 개인 개발업무에서 캡챠(CAPTCHA) 인증을 할 일이 생겼다. 캡챠 이미지 예시는 아래와 같다.TesseractOCR(광학 문자 인식, Optical Character Recognition)을 활용하기 위해 아래와 같은 python 코드를 실행해본다.import subprocessdef run_ocr(filepath):    de...",
    "content": "최근 취미로 시작한 개인 개발업무에서 캡챠(CAPTCHA) 인증을 할 일이 생겼다. 캡챠 이미지 예시는 아래와 같다.TesseractOCR(광학 문자 인식, Optical Character Recognition)을 활용하기 위해 아래와 같은 python 코드를 실행해본다.import subprocessdef run_ocr(filepath):    def run_command(command):        p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)        return iter(p.stdout.readline, b\"\")    cmd = f\"tesseract {filepath} stdout -l eng --oem 3 --psm 8 --dpi 300\"    output_str = \"\"    for line in run_command(cmd.split()):        output_str += line.decode(\"UTF-8\")    return output_str# 코드 실행 결과&gt;&gt;&gt; print(run_ocr(\"String1.png\"))185973&gt;&gt;&gt; print(run_ocr(\"String2.png\"))B006-2_.&gt;&gt;&gt; print(run_ocr(\"String3.png\"))1000595\" |&gt;&gt;&gt; print(run_ocr(\"String4.png\"))1045637 |위 4개의 예시 이미지에 대한 텍스트 분석값 중 첫 번째 이미지에 대한 값을 제외하곤 분석값이 틀렸다.tesseract 명령어 실행 시 넘기는 인자값들을 변경해보면 저것보다는 나은 결과값을 가질 수도 있을 것 같지만, 해보진 않고 ChatGPT 활용으로 넘어간다. tesseract 명령 파라미터는 여기 에서 확인할 수 있다.  --psm NUM             Specify page segmentation mode.  --oem NUM             Specify OCR Engine mode.ChatGPTgpt 모델을 활용하여 OCR 테스트하는 것은 OpenAI Playground에서 해볼 수 있다.기원님께서 도와주시며 첨부해주신 이미지위 스크린샷에서 볼 수 있듯이, gpt-4o 모델을 활용하여 OCR 을 해보니 캡챠 이미지를 체감상 90% 정도의 정확도로 분석한다고 느꼈다 – 테스트를 많이 해보진 않았다. 주로 실패하는 이미지들을 보니, 숫자 가운데 점이나 선이 그어진 것보다도 두 개의 숫자가 붙어있는 경우가 많아보였다. 확실한 답(label)이 있으니, 캡챠 이미지와 그에 맞는 답들을 갖고서 gpt 모델 학습을 시킬 수 있지 않을까도 생각해봤다.캡챠는 시각이 불편한 사람들(visually impaired people)을 위해서 ‘음성듣기’ 기능을 제공한다. 이 음성을 가지고 Speech-To-Text 모델을 통해 캡챠 인증하는 방법도 생각해봤다. 재생을 하니 외국어 같은 노이즈가 섞인 음성이 나온다. 캡챠 이미지에 점이나 가로선 등을 그어 봇(bot)의 처리를 막는 것과 비슷한 맥락으로 이해했다.결론코드를 통해 캡챠 인증을 통과하려면 gpt 모델을 통해 캡챠 이미지 분석을 하고, 잘못된 분석을 한 경우에는 ‘새로고침’ 버튼으로 새로운 캡챠 이미지를 분석하도록 구현하면 충분히 쓸만한 기능을 만들 것 같다."
  },
  
  {
    "title": "나를 위해 써먹을 수 있는 코드",
    "url": "/posts/%EB%82%98%EB%A5%BC-%EC%9C%84%ED%95%B4-%EC%8D%A8%EB%A8%B9%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%BD%94%EB%93%9C/",
    "categories": "notes, gibberish",
    "tags": "coding, startup",
    "date": "2024-10-21 17:46:00 +0900",
    





    
    "snippet": "꽤나 어렸을 적에 개발자를 꿈꿨던 이유는 머릿속으로 생각하는 것들을 코드를 통해 구체화시켜 사업을 한다던가 하는 것이었다. 스타트업으로서 창업을 하여 세상을 바꾸는 일들을 꿈꾸던 적이 있었다. 그 때 내가 생각한 미래의 나의 모습과 현재의 나는 거리가 그리 가까운 것 같진 않지만, 나름 지금 스타트업에서 개발자로 근무를 하고 있으니 큰 관점에서는 맞는...",
    "content": "꽤나 어렸을 적에 개발자를 꿈꿨던 이유는 머릿속으로 생각하는 것들을 코드를 통해 구체화시켜 사업을 한다던가 하는 것이었다. 스타트업으로서 창업을 하여 세상을 바꾸는 일들을 꿈꾸던 적이 있었다. 그 때 내가 생각한 미래의 나의 모습과 현재의 나는 거리가 그리 가까운 것 같진 않지만, 나름 지금 스타트업에서 개발자로 근무를 하고 있으니 큰 관점에서는 맞는 방향으로 가고 있다고 보고 싶다. 대기업을 관두고 나온 것도 방향을 틀었던 것이라 생각했으니깐.현재의 회사에서 기획된 제품을 실제 코드를 통해 만들어내며 뿌듯함을 느끼는 순간들이 있다. 그런 감정을 느끼기 위해 많은 개발에 참여해왔고 또 그 과정에서 개발자로서 성장을 해왔으리라. 그런데, 그렇게 성장시킨 능력을 회사일을 마치고 나서 다른 곳에 써봐야겠다는 생각을 여지껏 잘 못해왔다. 요즘 개인적인 시간을 많이 가지면서 내가 가진 재능을 나를 위해 (어떤 식으로든?) 써먹어봐야겠다는 생각을 한다. 혹시 또 모르지, 그러다보면 좋은 기회가 찾아올지?"
  },
  
  {
    "title": "minitest 실행 시 특정 테스트만 실행하는 법",
    "url": "/posts/minitest-%EC%8B%A4%ED%96%89-%EC%8B%9C-%ED%8A%B9%EC%A0%95-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A7%8C-%EC%8B%A4%ED%96%89%ED%95%98%EB%8A%94-%EB%B2%95/",
    "categories": "develop, rubyonrails",
    "tags": "ruby, tips, minitest",
    "date": "2024-10-14 12:28:00 +0900",
    





    
    "snippet": "minitest 를 사용한 ruby 코드 테스트 시 파일 내 특정 테스트만 실행하는 방법은 아래와 같이 TESTOPTS 환경 변수를 설정하여 필터링하는 방법이 있다. 아래 예시의 -n 옵션은 실행할 테스트의 이름을 필터링하는 데 사용되며, 정규 표현식 패턴을 사용하여 테스트를 선택할 수 있다.# spec/models/test.rb 파일에서 테스트 이름...",
    "content": "minitest 를 사용한 ruby 코드 테스트 시 파일 내 특정 테스트만 실행하는 방법은 아래와 같이 TESTOPTS 환경 변수를 설정하여 필터링하는 방법이 있다. 아래 예시의 -n 옵션은 실행할 테스트의 이름을 필터링하는 데 사용되며, 정규 표현식 패턴을 사용하여 테스트를 선택할 수 있다.# spec/models/test.rb 파일에서 테스트 이름에 foobar 가 포함된 테스트를 필터링하여 실행bundle exec rake test TEST=spec/models/test.rb TESTOPTS=\"-n='/foobar/'\"그 이외에도 chatGPT 검색해보니 다양한 인자들이 있다고 해서 쓸만한걸 남겨본다.  -e : 테스트 설명 필터링          예시) TESTOPTS=\"-e '/example description/'\" ruby your_test_file.rb        --seed &lt;number&gt; : 랜덤 시드 값          --seed 를 사용하여 시드 값을 설정하고 테스트 실행 순서를 랜덤으로 지정      예시) TESTOPTS=\"--seed 1234\" ruby your_test_file.rb        --verbose : 상세 출력          테스트 실행 중 더 많은 정보를 출력; 각 테스트에 대한 통과, 실패, 오류 정보를 자세하게 표시      TESTOPTS=\"--verbose\" ruby your_test_file.rb        --help : 도움말 출력          테스트 실행 시 사용 가능한 옵션들에 대한 도움말을 출력      TESTOPTS=\"--help\" ruby your_test_file.rb      "
  },
  
  {
    "title": "AWS S3 의 csv 파일 쿼리 시 헤더 무시",
    "url": "/posts/AWS-S3-%EC%9D%98-csv-%ED%8C%8C%EC%9D%BC-%EC%BF%BC%EB%A6%AC-%EC%8B%9C-%ED%97%A4%EB%8D%94-%EB%AC%B4%EC%8B%9C/",
    "categories": "data, aws",
    "tags": "aws, athena, glue",
    "date": "2024-09-26 18:16:00 +0900",
    





    
    "snippet": "Athena Query Editor 에서 S3 의 데이터에 접근하기 위해서는 먼저 Glue 에 schema 가 등록돼있어야 한다.[ AWS Glue - Data Catalog ] 경로에서 Database, Table schema 추가하면 Athena 에서 쿼리가 가능한데, S3 의 헤더가 있는 csv 파일에 접근하는 경우 쿼리 실행 시 에러가 발생할 ...",
    "content": "Athena Query Editor 에서 S3 의 데이터에 접근하기 위해서는 먼저 Glue 에 schema 가 등록돼있어야 한다.[ AWS Glue - Data Catalog ] 경로에서 Database, Table schema 추가하면 Athena 에서 쿼리가 가능한데, S3 의 헤더가 있는 csv 파일에 접근하는 경우 쿼리 실행 시 에러가 발생할 수 있다. 헤더의 자료형(문자열 등)과 schema 와 불일치가 발생하기 때문이라서 이 때는 헤더를 무시해줘야 한다.ChatGPT 를 찾아보니 Athena 에서 CSV 파일에 대해 외부 테이블 생성할 때, TBLPROPERTIES ('skip.header.line.count'='1') 이런 속성을 붙이면 된다고 한다. AWS Glue 를 통해 생성한 테이블을 삭제하고 재생성하면 된다.SHOW CREATE TABLE `test_table`; -- Generate table DDLDROP TABLE `test_table`;-- Generate table DDL 을 통해 나온 쿼리CREATE EXTERNAL TABLE `test_table`(  `column1` string COMMENT '',  `column2` int COMMENT '')ROW FORMAT SERDE  'org.apache.hadoop.hive.serde2.OpenCSVSerde'WITH SERDEPROPERTIES (  'separatorChar'=',')STORED AS INPUTFORMAT  'org.apache.hadoop.mapred.TextInputFormat'OUTPUTFORMAT  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'LOCATION  's3://crema-data-extraction/data_backup/reviews/'TBLPROPERTIES (  'classification'='csv',  'skip.header.line.count'='1' -- 추가한 라인 (1줄의 헤더 무시))"
  },
  
  {
    "title": "퇴사 예정자의 코드 혹은 코드 리뷰",
    "url": "/posts/%ED%87%B4%EC%82%AC-%EC%98%88%EC%A0%95%EC%9E%90%EC%9D%98-%EC%BD%94%EB%93%9C-%ED%98%B9%EC%9D%80-%EC%BD%94%EB%93%9C-%EB%A6%AC%EB%B7%B0/",
    "categories": "notes, gibberish",
    "tags": "legacy code, code quality",
    "date": "2024-09-26 17:14:00 +0900",
    





    
    "snippet": "개발자가 퇴사를 예고, 공표한 이후 그의 마음을 돌리지 못했다면 그 사람에게는 가능한 간단한 코드 작업만 시키는게 좋은 것 같다. 떠버린 마음을 가지고 구조적인 접근을 하는 코드를 작성하거나, 또는 그런 코드를 리뷰하는 경우에 안 좋은 결과가 나올 확률이 높다. 간혹, 큰 작업을 훌륭히 마무리함으로서 회사에 큰 기여를 하며 유종의 미를 거두는 훌륭한 ...",
    "content": "개발자가 퇴사를 예고, 공표한 이후 그의 마음을 돌리지 못했다면 그 사람에게는 가능한 간단한 코드 작업만 시키는게 좋은 것 같다. 떠버린 마음을 가지고 구조적인 접근을 하는 코드를 작성하거나, 또는 그런 코드를 리뷰하는 경우에 안 좋은 결과가 나올 확률이 높다. 간혹, 큰 작업을 훌륭히 마무리함으로서 회사에 큰 기여를 하며 유종의 미를 거두는 훌륭한 이들이 있기는 하지만.. 쉽지 않은 일이다.그나마 퇴사 예정자가 주니어 개발자라면, 어찌저찌 돌아가도록 짠 코드를 리뷰어들이 개선시킬 수 있는 여지가 많다. 문제는 주니어 개발자의 잘못된 코드 구조를 퇴사 예정인 시니어 개발자가 만사 OK 로 넘기는 경우같다. 이 때 작성된 코드의 여파는 많은 이들을 오랫동안 고통받게 할 것이다. 이러한 코드는 레거시 코드가 돼버리기 전에 ASAP 으로 뜯어고쳐야 한다!"
  },
  
  {
    "title": "카카오톡 챗봇 동작",
    "url": "/posts/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1-%EC%B1%97%EB%B4%87-%EB%8F%99%EC%9E%91/",
    "categories": "develop, products",
    "tags": "chatbot, kakaotalk, explain",
    "date": "2024-09-24 16:01:00 +0900",
    





    
    "snippet": "동작 다이어그램챗봇 개발을 하며 유관 부서와 소통 시 챗봇 동작에 관해 좀 헷갈려하는 것 같아서 적어둔다.카카오톡 채널  알림톡을 전송하는 주체  사용자가 알림톡을 받았을 때, 카카오톡 채널의 ‘발신프로필’ 이 표시됨알림톡 전송  알림톡은 카카오톡 채널을 추가하지 않은 이용자에게도 발송이 가능한 ‘정보성 메시지’ (출처)  여러 대행사를 통해 카카오톡...",
    "content": "동작 다이어그램챗봇 개발을 하며 유관 부서와 소통 시 챗봇 동작에 관해 좀 헷갈려하는 것 같아서 적어둔다.카카오톡 채널  알림톡을 전송하는 주체  사용자가 알림톡을 받았을 때, 카카오톡 채널의 ‘발신프로필’ 이 표시됨알림톡 전송  알림톡은 카카오톡 채널을 추가하지 않은 이용자에게도 발송이 가능한 ‘정보성 메시지’ (출처)  여러 대행사를 통해 카카오톡 알림톡을 사용자에게 전송할 수 있다.카카오톡 챗봇  kakao business 챗봇 관리자센터에서 개발 및 관리하는 챗봇  시나리오 및 스킬 관리          시나리오: 봇 안에서 사용자가 경험할 수 있는 서비스 단위      스킬: ‘사용자 발화’ 에 반응하여 응답을 돌려주기 위한 기능      1:1 매칭  내 카카오 계정에 생성된 챗봇 목록입니다. 하나의 채널에 하나의 챗봇만 연결되며, 이미 다른 채널에 연결된 챗봇은 연결할 수 없습니다. (카카오 페이지에서 ‘챗봇 연결하기’ 시 나오는 메시지)  카카오톡 채널과 카카오톡 챗봇은 1:1 관계이다.챗봇 전환(BT)  알림톡 템플릿에 챗봇 전환을 위한 버튼을 삽입할 수 있음 (버튼 유형)  알림톡을 받은 사용자가 버튼을 누르게 되면 챗봇 모드로 전환  챗봇 전환 이후 사용자가 입력하는 메시지, 발화(utterance)는 카카오톡 챗봇에서 처리  BT 는 Bot Transition 의 약자로 추정발화 처리  사용자 발화(utterance)는 카카오톡 챗봇의 블록으로 유입되고 블록에서 미리 정해진대로 처리됨  이 처리는 ‘봇 응답’ 이라고 하는데 텍스트, 이미지, 카드, 스킬 데이터 등의 응답이 있음  그 중에서 스킬 데이터는 스킬 서버에서 처리하는 방식으로 별도 서버의 API 를 활용하는 응답 방식스킬 서버  위의 ‘카카오톡 챗봇’ 에서의 ‘스킬’ 을 처리하기 위한 서버 (크리마 서버)  ‘사용자 발화’ 등의 데이터를 받아 필요한 처리를 한 뒤, 사용자에게 응답을 위한 데이터를 JSON 포맷으로 응답한다."
  },
  
  {
    "title": "구글 OAuth 2.0 인증 정리",
    "url": "/posts/%EA%B5%AC%EA%B8%80-OAuth-2.0-%EC%9D%B8%EC%A6%9D-%EC%A0%95%EB%A6%AC/",
    "categories": "develop, products",
    "tags": "explain, oauth",
    "date": "2024-09-09 15:32:00 +0900",
    





    
    "snippet": "오래 전 구글 OAuth 관련 개발을 하며 정리해둔 메모가 있어서 허전한 블로그에 남겨둔다.https://developers.google.com/identity/protocols/oauth2#webserverOAuth 구성 요소  Client (The Third-party Application)          User 의 정보에 접근을 시도하는 ‘나...",
    "content": "오래 전 구글 OAuth 관련 개발을 하며 정리해둔 메모가 있어서 허전한 블로그에 남겨둔다.https://developers.google.com/identity/protocols/oauth2#webserverOAuth 구성 요소  Client (The Third-party Application)          User 의 정보에 접근을 시도하는 ‘나’ 의 Application      ‘나’ 는 Web Server Application 을 운영하는 주체      접근을 위해서는 User 로부터의 허가가 필요함        Resource Owner (User)          ‘나’ 의 Application을 사용하는 End User      계정 정보의 일부에 대한 접근을 허가하는 사람        Google Servers          인증 API 를 제공하는 업체인 ‘Google’ (Authorization Server)      사용자의 정보에 접근하기 위해 사용되는 API 서버 (Resource Server)      Authorization, Resource 서버가 분리돼있을 수 있음      OAuth Flow  User 가 Client(‘나’ 의 Application)에서 로그인을 시도  User 를 Resource Server 의 OAuth 2.0 서버로 Redirect          서버에서 User 를 (로그인 등을 통해) 인증      (Client가 요청한) Scoped List 로의 접근 권한을 Client 에게 주기 위해 User 의 동의(prompt)를 구함        Resource Server 가 Client 에게 specified redirect URL 을 통해서 response 로 AuthCode 전달          이는 one-time use code 로 사용자가 승인했을 경우에만 전달됨        Client 는 Resource Server 로 AuthCode(+Client ID/Secret)를 통해 Access Token 받음          Refresh/Access Token      Refresh Token 은 Access Token 을 사용자의 재로그인 없이 갱신할 수 있게 함        Client 는 마침내 획득한 Access Token 을 저장하여 Resource Server 로 API CallClient ID/SecretOAuth 프로세스를 진행하기 위해서는 Client ID 와 Client Secret 을 획득해야 한다. Application 에 대한 기본적인 정보가 들어간다. Client ID 는 login URL 구성에 사용되거나 javascript 코드에 사용되며 public information 으로 간주되지만, Client Secret 의 경우 절대적으로 노출되면 안 된다.참고  https://medium.com/javarevisited/do-you-know-about-oauth2-protocol-and-its-different-flows-9d849cec45b0"
  },
  
  {
    "title": "블로그 시작",
    "url": "/posts/%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%8B%9C%EC%9E%91/",
    "categories": "notes, gibberish",
    "tags": "",
    "date": "2024-09-02 16:26:00 +0900",
    





    
    "snippet": "오래 전부터 생각만 해온 블로그를 드디어 만들었다.Jekyll 이 Ruby 로 동작하는데 루비 개발자로서 럭키비키잖아? 😀bundler, liquid 등 오랜만에 보지만 익숙한 용어들이 나타난다.plug-in 설치 등은 나중에 설치하기로 하고 일단 구색을 갖춰뒀다.미래의 나 자신에게,또한 이 블로그를 방문하는 이들에게 도움이 되길 바라본다.",
    "content": "오래 전부터 생각만 해온 블로그를 드디어 만들었다.Jekyll 이 Ruby 로 동작하는데 루비 개발자로서 럭키비키잖아? 😀bundler, liquid 등 오랜만에 보지만 익숙한 용어들이 나타난다.plug-in 설치 등은 나중에 설치하기로 하고 일단 구색을 갖춰뒀다.미래의 나 자신에게,또한 이 블로그를 방문하는 이들에게 도움이 되길 바라본다."
  }
  
]

